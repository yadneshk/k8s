---
apiVersion: v1
kind: PersistentVolume
metadata:
  # PV is created at cluster level and it not namespace specific
  name: httpd-deployment-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: standard
  hostPath:
    path: /var/

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: httpd-deployment-pvc
  namespace: development
  labels:
    app: httpd
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deployment
  namespace: development
  labels:
    app: httpd
spec:
  replicas: 3
  selector:
    matchLabels:
      app: httpd
  template:
    metadata:
      labels:
        app: httpd
    spec:
      volumes:
        - name: httpd-deployment-pv
          persistentVolumeClaim:
            claimName: httpd-deployment-pvc
      nodeSelector:
        env: prod
      containers:
        - name: httpd-container
          image: quay.io/fedora/httpd-24
          # ports here is just informational, just addit for good practice
          # the one passed in service config is what matters
          # ports:
          # - containerPort: 8080
          # protocol: TCP
          volumeMounts:
            - mountPath: "/var/www/html/"
              name: httpd-deployment-pv
          resources:
            # used for scheduling and to indicate that a pod cannot run with lass than specified amount
            requests:
              cpu: "10m" # 10 millicpus
              memory: 20Mi
            # Pod cannot consume compute resource more than this
            limits:
              cpu: "80m" # 80 millicpus
              memory: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  name: httpd-service
  labels:
    app: httpd
spec:
  ports:
    - protocol: TCP
      targetPort: 8080
      port: 8080
  selector:
    app: httpd
  type: ClusterIP

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: httpd-route
spec:
  to:
    kind: Service
    name: httpd-service
  port:
    targetPort: 8080
  wildcardPolicy: None
